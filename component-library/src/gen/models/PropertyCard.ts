/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyValueString } from './KeyValueString';
import {
    KeyValueStringFromJSON,
    KeyValueStringFromJSONTyped,
    KeyValueStringToJSON,
} from './KeyValueString';

/**
 * 
 * @export
 * @interface PropertyCard
 */
export interface PropertyCard {
    /**
     * 
     * @type {string}
     * @memberof PropertyCard
     */
    componentType?: PropertyCardComponentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyCard
     */
    title: string;
    /**
     * 
     * @type {Array<KeyValueString>}
     * @memberof PropertyCard
     */
    keyValuePairs?: Array<KeyValueString>;
    /**
     * 
     * @type {boolean}
     * @memberof PropertyCard
     */
    condensed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PropertyCard
     */
    isActive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PropertyCard
     */
    href?: string;
}


/**
 * @export
 */
export const PropertyCardComponentTypeEnum = {
    PropertyCard: 'PropertyCard'
} as const;
export type PropertyCardComponentTypeEnum = typeof PropertyCardComponentTypeEnum[keyof typeof PropertyCardComponentTypeEnum];


/**
 * Check if a given object implements the PropertyCard interface.
 */
export function instanceOfPropertyCard(value: object): value is PropertyCard {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function PropertyCardFromJSON(json: any): PropertyCard {
    return PropertyCardFromJSONTyped(json, false);
}

export function PropertyCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyCard {
    if (json == null) {
        return json;
    }
    return {
        
        'componentType': json['component_type'] == null ? undefined : json['component_type'],
        'title': json['title'],
        'keyValuePairs': json['key_value_pairs'] == null ? undefined : ((json['key_value_pairs'] as Array<any>).map(KeyValueStringFromJSON)),
        'condensed': json['condensed'] == null ? undefined : json['condensed'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'href': json['href'] == null ? undefined : json['href'],
    };
}

export function PropertyCardToJSON(value?: PropertyCard | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component_type': value['componentType'],
        'title': value['title'],
        'key_value_pairs': value['keyValuePairs'] == null ? undefined : ((value['keyValuePairs'] as Array<any>).map(KeyValueStringToJSON)),
        'condensed': value['condensed'],
        'is_active': value['isActive'],
        'href': value['href'],
    };
}

