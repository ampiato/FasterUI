/* tslint:disable */
/* eslint-disable */
/**
 * FasterUI
 * A framework for building beautiful UIs. Pronto!
 *
 * The version of the OpenAPI document: 0.1.1
 * Contact: tomas.krejci@ampiato.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Button
 */
export interface Button {
    /**
     * 
     * @type {string}
     * @memberof Button
     */
    componentType?: ButtonComponentTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Button
     */
    primary?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof Button
     */
    size?: ButtonSizeEnum;
    /**
     * 
     * @type {string}
     * @memberof Button
     */
    href?: string;
    /**
     * 
     * @type {string}
     * @memberof Button
     */
    label: string;
}


/**
 * @export
 */
export const ButtonComponentTypeEnum = {
    Button: 'Button'
} as const;
export type ButtonComponentTypeEnum = typeof ButtonComponentTypeEnum[keyof typeof ButtonComponentTypeEnum];

/**
 * @export
 */
export const ButtonSizeEnum = {
    Small: 'small',
    Medium: 'medium',
    Large: 'large'
} as const;
export type ButtonSizeEnum = typeof ButtonSizeEnum[keyof typeof ButtonSizeEnum];


/**
 * Check if a given object implements the Button interface.
 */
export function instanceOfButton(value: object): value is Button {
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function ButtonFromJSON(json: any): Button {
    return ButtonFromJSONTyped(json, false);
}

export function ButtonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Button {
    if (json == null) {
        return json;
    }
    return {
        
        'componentType': json['component_type'] == null ? undefined : json['component_type'],
        'primary': json['primary'] == null ? undefined : json['primary'],
        'size': json['size'] == null ? undefined : json['size'],
        'href': json['href'] == null ? undefined : json['href'],
        'label': json['label'],
    };
}

export function ButtonToJSON(value?: Button | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component_type': value['componentType'],
        'primary': value['primary'],
        'size': value['size'],
        'href': value['href'],
        'label': value['label'],
    };
}

