/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Component } from './Component';
import {
    ComponentFromJSON,
    ComponentFromJSONTyped,
    ComponentToJSON,
} from './Component';

/**
 * 
 * @export
 * @interface SectionHeader
 */
export interface SectionHeader {
    /**
     * 
     * @type {string}
     * @memberof SectionHeader
     */
    componentType?: SectionHeaderComponentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SectionHeader
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof SectionHeader
     */
    subtitle?: string;
    /**
     * 
     * @type {Component}
     * @memberof SectionHeader
     */
    children?: Component | null;
}


/**
 * @export
 */
export const SectionHeaderComponentTypeEnum = {
    SectionHeader: 'SectionHeader'
} as const;
export type SectionHeaderComponentTypeEnum = typeof SectionHeaderComponentTypeEnum[keyof typeof SectionHeaderComponentTypeEnum];


/**
 * Check if a given object implements the SectionHeader interface.
 */
export function instanceOfSectionHeader(value: object): value is SectionHeader {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function SectionHeaderFromJSON(json: any): SectionHeader {
    return SectionHeaderFromJSONTyped(json, false);
}

export function SectionHeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): SectionHeader {
    if (json == null) {
        return json;
    }
    return {
        
        'componentType': json['component_type'] == null ? undefined : json['component_type'],
        'title': json['title'],
        'subtitle': json['subtitle'] == null ? undefined : json['subtitle'],
        'children': json['children'] == null ? undefined : ComponentFromJSON(json['children']),
    };
}

export function SectionHeaderToJSON(value?: SectionHeader | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component_type': value['componentType'],
        'title': value['title'],
        'subtitle': value['subtitle'],
        'children': ComponentToJSON(value['children']),
    };
}

