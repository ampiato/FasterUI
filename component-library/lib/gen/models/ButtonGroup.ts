/* tslint:disable */
/* eslint-disable */
/**
 * FasterUI
 * A framework for building beautiful UIs. Pronto!
 *
 * The version of the OpenAPI document: 0.1.1
 * Contact: tomas.krejci@ampiato.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ButtonGroupItem } from './ButtonGroupItem';
import {
    ButtonGroupItemFromJSON,
    ButtonGroupItemFromJSONTyped,
    ButtonGroupItemToJSON,
} from './ButtonGroupItem';

/**
 * 
 * @export
 * @interface ButtonGroup
 */
export interface ButtonGroup {
    /**
     * 
     * @type {string}
     * @memberof ButtonGroup
     */
    componentType?: ButtonGroupComponentTypeEnum;
    /**
     * 
     * @type {Array<ButtonGroupItem>}
     * @memberof ButtonGroup
     */
    items: Array<ButtonGroupItem>;
}


/**
 * @export
 */
export const ButtonGroupComponentTypeEnum = {
    ButtonGroup: 'ButtonGroup'
} as const;
export type ButtonGroupComponentTypeEnum = typeof ButtonGroupComponentTypeEnum[keyof typeof ButtonGroupComponentTypeEnum];


/**
 * Check if a given object implements the ButtonGroup interface.
 */
export function instanceOfButtonGroup(value: object): value is ButtonGroup {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function ButtonGroupFromJSON(json: any): ButtonGroup {
    return ButtonGroupFromJSONTyped(json, false);
}

export function ButtonGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): ButtonGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'componentType': json['component_type'] == null ? undefined : json['component_type'],
        'items': ((json['items'] as Array<any>).map(ButtonGroupItemFromJSON)),
    };
}

export function ButtonGroupToJSON(value?: ButtonGroup | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component_type': value['componentType'],
        'items': ((value['items'] as Array<any>).map(ButtonGroupItemToJSON)),
    };
}

